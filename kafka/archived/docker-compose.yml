version: '3.8'

services:
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
      - "9094:9094"
      - "9404:9404"  # Exposes JMX exporter metrics
    networks: 
      - sensor-network-dev
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_PROCESS_ROLES: controller,broker
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@192.168.59.1:9093"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,EXTERNAL://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://192.168.59.1:9094
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 10
      KAFKA_LOG_RETENTION_HOURS: 168 
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0 
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"
      # Attach the JMX exporter Java agent
      EXTRA_ARGS: "-javaagent:/usr/local/jmx_prometheus_javaagent.jar=9404:/etc/jmx-exporter/jmx_exporter.yaml"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount the JMX exporter configuration and jar
      - ./jmx_exporter/jmx_exporter.yaml:/etc/jmx-exporter/jmx_exporter.yaml
      - ./jmx_prometheus_javaagent-1.2.0.jar:/usr/local/jmx_prometheus_javaagent.jar

  kafka-exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka-exporter
    ports:
      - "9308:9308"
    networks:
      - sensor-network-dev
    command: ["--kafka.server=kafka:9092"]
    depends_on:
      - kafka

networks:
  sensor-network-dev:
    external: true
